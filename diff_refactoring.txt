nbdiff Regression.ipynb (HEAD) Regression.ipynb
--- Regression.ipynb (HEAD)  (no timestamp)
+++ Regression.ipynb  2021-04-01 13:19:35.143436
## modified /cells/2/source:
@@ -82,22 +82,22 @@ def inspect_model(normed_train_data):
     return example_result
 
 #Training the model
-EPOCHS = 1000
 
-history = model.fit(normed_train_data, train_labels, epochs=EPOCHS, validation_split = 0.2, 
+def train_model(model,normed_train_data, train_labels,EP):
+    history = model.fit(normed_train_data, train_labels, epochs=EPOCHS, validation_split = 0.2, 
                     verbose=0, callbacks=[tfdocs.modeling.EpochDots()])
-hist = pd.DataFrame(history.history)
-print(hist, end='\n')
-hist['epoch'] = history.epoch
-hist.tail()
-plotter = tfdocs.plots.HistoryPlotter(smoothing_std=2)
-plotter.plot({'Basic': history}, metric = "mae")
-plt.ylim([0, 10])
-plt.ylabel('MAE [MPG]')
-plotter.plot({'Basic': history}, metric = "mse")
-plt.ylim([0, 20])
-plt.ylabel('MSE [MPG^2]')
-plt.show()
+    hist = pd.DataFrame(history.history)
+    print(hist, end='\n')
+    hist['epoch'] = history.epoch
+    hist.tail()
+    plotter = tfdocs.plots.HistoryPlotter(smoothing_std=2)
+    plotter.plot({'Basic': history}, metric = "mae")
+    plt.ylim([0, 10])
+    plt.ylabel('MAE [MPG]')
+    plotter.plot({'Basic': history}, metric = "mse")
+    plt.ylim([0, 20])
+    plt.ylabel('MSE [MPG^2]')
+    return plt.show()
 
 model = build_model()
 

